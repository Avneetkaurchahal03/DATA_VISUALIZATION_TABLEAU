<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Sales Parameter' datatype='integer' name='[Sales Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0'>
        <calculation class='tableau' formula='0' />
        <range granularity='5' max='10' min='0' />
      </column>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='federated.12x6a6x07f8xg6164r8r706wgqx1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='textscan.1uwil9e16xdi7n1f9nh7002zult3'>
            <connection class='textscan' directory='C:/Users/Kamaljeet Singh/Desktop' filename='Sample - Superstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1uwil9e16xdi7n1f9nh7002zult3' name='Sample - Superstore.csv' table='[Sample - Superstore#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1uwil9e16xdi7n1f9nh7002zult3' name='Sample - Superstore.csv' table='[Sample - Superstore#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit ratio]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Profit ratio</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='profit ratio' datatype='real' name='[Calculation_482166635533484032]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='profit range' datatype='real' name='[Calculation_482166635534311425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Profit])-MIN([Profit])' />
      </column>
      <column caption='max' datatype='real' name='[Calculation_482166635534626818]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Profit])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
        </aliases>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Electronics]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Electronics&quot;'>
            <value>&quot;Phones&quot;</value>
            <value>&quot;Storage&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
      <column aggregation='Median' datatype='integer' name='[Quantity]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sample - Superstore.csv' datatype='table' name='[__tableau_internal_object_id__].[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]' role='measure' type='quantitative' />
      <column-instance column='[profitable]' derivation='InOut' name='[io:profitable:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='CUSTOMER LESS THAN 100' name='[CUSTOMER LESS THAN 100]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter expression='COUNT([Customer ID]) &lt; 100' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Product Name Set' name='[Product Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Profit]) &lt; 700.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Product Name]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Profitable ' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='except'>
          <groupfilter field='[CUSTOMER LESS THAN 100]' function='reference' />
          <groupfilter field='[profitable]' function='reference' />
        </groupfilter>
      </group>
      <group delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[profitable]' function='reference' />
          <groupfilter field='[CUSTOMER LESS THAN 100]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Set 2' name='[Sub-Category Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Binders&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Envelopes&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Fasteners&quot;' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Set 3' name='[Sub-Category Set 3]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Sales]) &gt; 150000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Set' name='[Sub-Category Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Binders&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Chairs&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Machines&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Storage&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
        </groupfilter>
      </group>
      <group caption='profitable' name='[profitable]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Profit]) &gt; 20000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Kamaljeet Singh/Desktop/Sample - Superstore.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/13/2023 10:30:44 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sample - Superstore' increment-value='%null%' refresh-type='create' rows-inserted='9994' timestamp-start='2023-09-13 10:30:42.898' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1291</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1472</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1068</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1068</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>544</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>646</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2142</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2116</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3485</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4420</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit ratio</remote-alias>
              <ordinal>21</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>151</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.943662' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.056338' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Profit]' palette='orange_gold_10_0' type='interpolated' />
          <encoding attr='color' field='[Sales]' palette='gold_purple_diverging_10_0' type='interpolated' />
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:profitable:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_482166635534626818' />
        <field-sort-custom-order field='Calculation_482166635534311425' />
        <field-sort-custom-order field='Calculation_482166635533484032' />
        <field-sort-custom-order field='Profit ratio' />
        <field-sort-custom-order field='Electronics' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sample - Superstore.csv' id='Sample - Superstore.csv_2E5AAEB7CA4E419C94D58626C27AA78A'>
            <properties context=''>
              <relation connection='textscan.1uwil9e16xdi7n1f9nh7002zult3' name='Sample - Superstore.csv' table='[Sample - Superstore#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Geographical analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12x6a6x07f8xg6164r8r706wgqx1].[Longitude (generated)]' field-type='quantitative' max='-4239847.1457019188' min='-16881913.037413806' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12x6a6x07f8xg6164r8r706wgqx1].[Latitude (generated)]' field-type='quantitative' max='7843445.2279911153' min='1482657.01198899' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' />
              <lod column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:State:nk]' />
              <lod column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Country:nk]' />
              <geometry column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[Latitude (generated)]</rows>
        <cols>[federated.12x6a6x07f8xg6164r8r706wgqx1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{362DE07B-4157-4BB8-A52A-3339B3E7F980}' />
    </worksheet>
    <worksheet name='Sales by Product/Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</column>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' />
              <text column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk] * [federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk])</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok] / ([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk] / [federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]))</cols>
      </table>
      <simple-id uuid='{51AC58B2-88FE-4A7C-B272-B46F793082C3}' />
    </worksheet>
    <worksheet name='Sales in South'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]'>
            <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</column>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</column>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' />
              <text column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk] * [federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk])</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok] / ([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk] / [federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]))</cols>
      </table>
      <simple-id uuid='{228AC733-B2B1-4749-95AA-282F1F773C3D}' />
    </worksheet>
    <worksheet name='Segment wise analysyis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregation='Median' datatype='integer' name='[Quantity]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]'>
            <groupfilter from='2014' function='range' level='[yr:Order Date:ok]' to='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk] * [federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Quantity:qk])</rows>
        <cols>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{482FA646-69FD-446F-9FD5-F70316C0150C}' />
    </worksheet>
    <worksheet name='best year and month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok] / [federated.12x6a6x07f8xg6164r8r706wgqx1].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{B7AD41D7-59A4-486D-9D6A-253555A7EC74}' />
    </worksheet>
    <worksheet name='convert con t to discrete'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column aggregation='Median' datatype='integer' name='[Quantity]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Median' name='[med:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='None' name='[none:Quantity:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x6a6x07f8xg6164r8r706wgqx1].[med:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9d9a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk] + [federated.12x6a6x07f8xg6164r8r706wgqx1].[med:Sales:qk])</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk] / ([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Quantity:ok] / [federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]))</cols>
      </table>
      <simple-id uuid='{909F2AA3-E686-4490-AFCC-4C403AB63EFE}' />
    </worksheet>
    <worksheet name='convert cont to dim'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D6FF50CC-49F0-4F39-ACF1-B2F78255B3E1}' />
    </worksheet>
    <worksheet name='default proprties'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Median' name='[med:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x6a6x07f8xg6164r8r706wgqx1].[avg:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12x6a6x07f8xg6164r8r706wgqx1].[med:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.12x6a6x07f8xg6164r8r706wgqx1].[avg:Sales:qk] + [federated.12x6a6x07f8xg6164r8r706wgqx1].[med:Sales:qk])</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk] / [federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{244A5DF8-2A78-4FBE-A38E-7D0C6DB1622A}' />
    </worksheet>
    <worksheet name='groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Electronics]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Electronics&quot;'>
                  <value>&quot;Phones&quot;</value>
                  <value>&quot;Storage&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/square' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]</rows>
        <cols>[federated.12x6a6x07f8xg6164r8r706wgqx1].[Electronics]</cols>
      </table>
      <simple-id uuid='{70055DC0-9793-4627-A606-97C609A72558}' />
    </worksheet>
    <worksheet name='hierachy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
              </aliases>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]'>
            <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;3.6 Cubic Foot Counter Height Office Refrigerator&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk]' />
              <text column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk] / ([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk] / ([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk] / [federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk])))</cols>
      </table>
      <simple-id uuid='{B715EE48-B200-4B19-AF4F-B9C0CAD3040E}' />
    </worksheet>
    <worksheet name='june(2015) and june201'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column aggregation='CountD' datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Customer ID]' derivation='CountD' name='[ctd:Customer ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[mn:Order Date:ok]'>
            <groupfilter function='member' level='[mn:Order Date:ok]' member='6' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</column>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[mn:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[ctd:Customer ID:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7F957504-5CA9-483C-9069-44990EEE84DC}' />
    </worksheet>
    <worksheet name='most profitable product'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Office Supplies&quot;' value=' Supplies' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Max' name='[max:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</column>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[max:Profit:qk]' />
              <text column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk] * [federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk])</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk] / [federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{380368B9-7F31-4EA2-B80E-D2E5B3540C0B}' />
    </worksheet>
    <worksheet name='profitable (les than 100)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column aggregation='CountD' datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Customer ID]' derivation='CountD' name='[ctd:Customer ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[ctd:Customer ID:qk]' included-values='in-range'>
            <min>0</min>
            <max>100</max>
          </filter>
          <computed-sort column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]' direction='DESC' using='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' />
          <filter class='quantitative' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' included-values='in-range'>
            <min>37061.0</min>
          </filter>
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]</column>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[ctd:Customer ID:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12x6a6x07f8xg6164r8r706wgqx1].[ctd:Customer ID:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</rows>
        <cols>([federated.12x6a6x07f8xg6164r8r706wgqx1].[ctd:Customer ID:qk] + [federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{6C4CD74E-1DE1-4735-90D7-3FDFB1C769E4}' />
    </worksheet>
    <worksheet name='sets and parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sales Parameter' datatype='integer' name='[Sales Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0'>
              <calculation class='tableau' formula='0' />
              <range granularity='5' max='10' min='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set]' derivation='InOut' name='[io:Sub-Category Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:Sub-Category Set:nk]'>
            <groupfilter function='level-members' level='[io:Sub-Category Set:nk]' />
          </filter>
          <computed-sort column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]' direction='DESC' using='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]' />
          <slices>
            <column>[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:Sub-Category Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Parameters].[Sales Parameter]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]</rows>
        <cols>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{3FBC52B2-0041-4574-8682-468EC57BD46C}' />
    </worksheet>
    <worksheet name='subcategories highest profit ratio'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column caption='profit ratio' datatype='real' name='[Calculation_482166635533484032]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='real' name='[Profit ratio]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C16393%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit ratio]' derivation='Sum' name='[sum:Profit ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_482166635533484032]' derivation='User' name='[usr:Calculation_482166635533484032:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]' direction='DESC' using='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit ratio:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12x6a6x07f8xg6164r8r706wgqx1].[usr:Calculation_482166635533484032:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[usr:Calculation_482166635533484032:qk]' />
              <color column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[usr:Calculation_482166635533484032:qk]' />
              <text column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D1B89015-2D20-4600-8372-2C6952E9220A}' />
    </worksheet>
    <worksheet name='widest'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.12x6a6x07f8xg6164r8r706wgqx1' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6a6x07f8xg6164r8r706wgqx1'>
            <column caption='profit range' datatype='real' name='[Calculation_482166635534311425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([Profit])-MIN([Profit])' />
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='C16393%' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_482166635534311425]' derivation='User' name='[usr:Calculation_482166635534311425:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]' direction='DESC' using='[federated.12x6a6x07f8xg6164r8r706wgqx1].[usr:Calculation_482166635534311425:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]</rows>
        <cols>[federated.12x6a6x07f8xg6164r8r706wgqx1].[usr:Calculation_482166635534311425:qk]</cols>
      </table>
      <simple-id uuid='{1171C4A3-D24B-48C6-B906-6259AB114C03}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sales by Product/Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]' type='filter' />
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8019EA94-5148-435D-A7B4-B6E2A36CD579}' />
    </window>
    <window class='worksheet' name='most profitable product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]' type='filter' />
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[max:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[max:Profit:qk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{003FA508-BAB5-4344-B635-8BF978C37C67}' />
    </window>
    <window class='worksheet' name='Sales in South'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]' type='filter' />
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27A2C81A-1133-4EF1-B1AE-17AA37E2E43A}' />
    </window>
    <window class='worksheet' name='Segment wise analysyis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[qr:Order Date:ok]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B6DA4CD-75A8-42AC-955B-88AA8A7A5BEB}' />
    </window>
    <window class='worksheet' name='Geographical analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[attr:Country:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Country:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Region:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{753689FE-6627-4EDC-9103-65188F51F9B6}' />
    </window>
    <window class='worksheet' name='default proprties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Quantity:ok]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6325D19-C717-4EF1-A773-28D7D6C9FA2D}' />
    </window>
    <window class='worksheet' name='convert con t to discrete'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Quantity:ok]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[tyr:Order Date:qk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E29B560-8079-42A0-9972-5B1977A2BA47}' />
    </window>
    <window class='worksheet' name='convert cont to dim'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D4D35C7E-1B77-4A5D-B211-7DCB965FFF9D}' />
    </window>
    <window class='worksheet' name='hierachy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8658607-F6B0-4844-ADF8-FF636A8AA69C}' />
    </window>
    <window class='worksheet' name='sets and parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[Parameters].[Sales Parameter]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:Sub-Category Set 2:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:Sub-Category Set:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A336F4D4-CED7-4643-8BC9-E430B05DD646}' />
    </window>
    <window class='worksheet' name='groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[Electronics]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5CD93ED-0492-461D-B116-EF65CC8546AC}' />
    </window>
    <window class='worksheet' name='profitable (les than 100)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[Set 1]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:Set 1:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:profitable:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Customer ID:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48B1529C-F487-4226-9BEF-7B610194AA2A}' />
    </window>
    <window class='worksheet' name='best year and month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Category:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[sum:Sales:qk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2711D403-8061-4FAF-85B0-79B53B0B4C1C}' />
    </window>
    <window class='worksheet' name='subcategories highest profit ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6a6x07f8xg6164r8r706wgqx1].[usr:Calculation_482166635533484032:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB65028E-97F4-4DEB-A14A-F17AB2CAD68F}' />
    </window>
    <window class='worksheet' name='widest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:Product Name Set:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[io:profitable:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Product Name:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC698C56-56D5-41EA-9D59-9F9C2A64E5AA}' />
    </window>
    <window class='worksheet' maximized='true' name='june(2015) and june201'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[mn:Order Date:ok]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[none:Customer ID:nk]</field>
            <field>[federated.12x6a6x07f8xg6164r8r706wgqx1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F53434A-4A07-445E-83DC-326C15DDED06}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Geographical analysis' width='192'>
      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
      mQts6tDHy+tJR4gci208N5IACOnWlOBkNFUNmUS+jWtJzs+Xrk+wVqulVtk0uTvLTGR5fh4j
      x1pWNZMSjenh8lg9/sDFDk2rfurPxfR89H1snN10zk22luM4uZQHgvq9SbWU6zCXxY0mAGBl
      ENmMNHI2k46sR1pNkkTuT5i4Ctu9j0aj3Lnl/kWwqTbbQrcLXNfNeUPYa1V2p57NZqpqS18Q
      W79vvXmXSUKaYCIaGwHof49Go7XUBykdJIpc2fq1lYvZuucNQdENy4lQ5NbcVIu7iTNKb4q+
      +uWmSaHr7peFzY4BoLo8N5tN5RaN4xjL5TK3/JPpHm3XKXpuV4XJZKKS/riGwjYqVpHEv/EE
      sAksnzNxbj3nRk5aKapNkkH+zuNYrCO5bpEebfp3VTDZE1mWKbVH96SQOKhb68SrSxfT9fT7
      M41l05jl8ZTKSZJgMpkgiiKcnJxgMplYvWumZ8l96/W6ihXxWjcuELYN+BI3cTWZ47Op69qm
      azEcn2VZrmJtEy7qMSozJp2oGSji9TihZWCwaDz65CZsXjfu5zjlMlRN52DVl56ZWpawWq0W
      sizLLRDoODcwELYNmDOfZRl6vR6azWZOl9V12qJuEPpvJjWD3/W0DNuE0HGVEoDnkzlP+sSi
      qxg4ZwKMXhepb0VjLWu4F43XZh/ov5VlULwn2g2vjArkOKskufl8rkL9JqOtKFRO6CqPhG4Y
      MvXg7OyscKKU4bAXgWmy69mp7CJN/z/LEov6iTKSTFXpqiVWGdhU1KJn5rpubi0xSdwfeQJg
      LCCOYxVW5wOTrU+KPBNF24se/GAwyAWcyoxXnv+iMBn4Nq+XvKZcaMJE6NyfkrQIjMgX3eO2
      98Qx2DxRNtCA5j95zEfeBvB9H7u7uzg7O1trGEW3nyyvK+NdKOu9ybIsN6HK7M/Py3BX+aJ1
      F7D8fTwe5/aRvf9tKpCt+4KE53no9/vKu3QVkI4L/l3WuDZ1gyA+0hIAOA+K9fv9tYat7GrQ
      breNCXQSRcQhPRa6jropI1TXly9byK5zOZ5Pr3+Q+9rOw/rrbUHOf9HOFJsmtiTkosktod83
      8ZGWAASJgIXWNFDZ3puE4bpuYVtB3bdfpMPztyIC2DQ5dElT1uNh2k/fphvx+j07jqMYBHu0
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by Product/Region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales in South' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Segment wise analysyis' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='best year and month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='convert con t to discrete' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='convert cont to dim' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='default proprties' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='groups' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='hierachy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='june(2015) and june201' width='123'>
      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
      89ToCfqY+i8+9XdIRErkNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='most profitable product' width='192'>
      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
      /x8nEBTGvxQX2gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='107' name='profitable (les than 100)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sets and parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='subcategories highest profit ratio' width='192'>
      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
      S+E/cMdKsZ0bfUoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='widest' width='192'>
      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
      oPk/pRfjGLphZYgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
